openapi: 3.0.1
info:
  title: UserTestingAPI
  version: '1.0'
paths:
  /api/Auth/login:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success
  /api/Auth/register:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Success
  /api/Auth/refreshToken:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Success
  /api/Auth/heatcheck:
    get:
      tags:
        - Auth
      responses:
        '200':
          description: Success
  /api/Base/heatcheck:
    get:
      tags:
        - Base
      responses:
        '200':
          description: Success
  /api/Test/assignedTests/{userId}:
    get:
      tags:
        - Test
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /api/Test/{userId}/{testId}:
    get:
      tags:
        - Test
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: testId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /api/Test/heatcheck:
    get:
      tags:
        - Test
      responses:
        '200':
          description: Success
  /api/TestChecker/{testId}/{userId}:
    post:
      tags:
        - TestChecker
      parameters:
        - name: testId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          text/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          application/*+json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: Success
  /api/TestChecker/heatcheck:
    get:
      tags:
        - TestChecker
      responses:
        '200':
          description: Success
components:
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
          nullable: true
      additionalProperties: false
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
